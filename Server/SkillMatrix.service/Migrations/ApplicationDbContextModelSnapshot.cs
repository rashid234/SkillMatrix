// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillMatrix.service.Data;

#nullable disable

namespace SkillMatrix.service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillMatrix.Domain.Models.EmployeSkills", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("SkillRating")
                        .HasColumnType("int");

                    b.Property<int>("SkillType")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("SkillsMasterId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SkillsMasterId");

                    b.HasIndex("UsersId");

                    b.ToTable("EmployeSkills");
                });

            modelBuilder.Entity("SkillMatrix.Domain.Models.SkillsMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SkillDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SkillStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkillsMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SkillDescription = "Angular is a frond end language",
                            SkillName = "ANGULAR",
                            SkillStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            SkillDescription = "DotNet is a back end language",
                            SkillName = "DOTNET",
                            SkillStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            SkillDescription = "React is a frond end language",
                            SkillName = "REACT",
                            SkillStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            SkillDescription = "Node is a back end language",
                            SkillName = "NODE",
                            SkillStatus = 1
                        });
                });

            modelBuilder.Entity("SkillMatrix.Domain.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "YWRtaW5AMTIzNDU="
                        },
                        new
                        {
                            Id = 2,
                            Email = "employe1@gmail.com",
                            Name = "employe1",
                            Password = "MTIzNDU2Nzg="
                        },
                        new
                        {
                            Id = 3,
                            Email = "employe2@gmail.com",
                            Name = "employe2",
                            Password = "MTIzNDU2Nzg="
                        });
                });

            modelBuilder.Entity("SkillMatrix.Domain.Models.EmployeSkills", b =>
                {
                    b.HasOne("SkillMatrix.Domain.Models.SkillsMaster", "SkillsMaster")
                        .WithMany()
                        .HasForeignKey("SkillsMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMatrix.Domain.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillsMaster");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
